name: Create a release of clj-jq

on:
  push:
    tags:
      - 'v*'

jobs:
  create-gh-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          body: |
            See [CHANGELOG.md](https://github.com/dainiusjocas/clj-jq/blob/main/CHANGELOG.md) for details.
            If you are using macOS Catalina and later you may need to remove the quarantine attribute from the bits before you can use them. To do this, run the following:
            ```
            sudo xattr -r -d com.apple.quarantine clj-jq
            ```
          draft: true

  compile-native-image-and-release-artifacts:
    needs: create-gh-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        include:
          - os: ubuntu-latest
            platform: linux
            gu-binary: gu
            arch: 'amd64'
          - os: macos-latest
            platform: macos
            gu-binary: gu
            arch: 'amd64'

    steps:
      - uses: actions/checkout@master

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.2.0'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: ${{ matrix.arch }}

      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image

      - name: Install clojure tools-deps
        uses: DeLaGuardo/setup-clojure@master
        with:
          tools-deps: 1.10.3.956

      - name: Compile uberjar
        run: |
          clojure -T:build clean
          clojure -T:build uber

      - name: Upload uberjar to the release when on linux
        if: ${{ matrix.platform == 'linux' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            target/clj-jq-*-standalone.jar

      - name: Compile native image
        run: |
          CLJ_JQ_STATIC=false bash script/compile
          zip clj-jq-${RELEASE_VERSION#v*}-${{ matrix.platform }}-${{ matrix.arch }}.zip clj-jq

      - name: Setup MUSL and compile static native-image on linux
        if: ${{ matrix.platform == 'linux' }}
        run: |
          bash script/setup-musl
          echo "MUSL_DIR=${HOME}/.musl" >> $GITHUB_ENV
          echo "PATH=$PATH:${MUSL_DIR}/bin" >> $GITHUB_ENV
          CLJ_JQ_STATIC=true LMGREP_MUSL=true bash script/compile
          zip clj-jq-${RELEASE_VERSION#v*}-${{ matrix.platform }}-${{ matrix.arch }}-static.zip clj-jq

      - name: Upload binaries to the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            clj-jq-*-${{ matrix.platform }}-${{ matrix.arch }}.zip
            clj-jq-*-${{ matrix.platform }}-${{ matrix.arch }}-static.zip

  deploy-to-clojars:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache maven deps
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Prepare java
        uses: actions/setup-java@v2.3.0
        with:
          java-version: 8.0.292+10
          distribution: 'adopt'

      - name: Install clojure tools-deps
        uses: DeLaGuardo/setup-clojure@master
        with:
          tools-deps: 1.10.3.956

      - name: Publish lib to Clojars
        run: |
          clojure -T:build jar
          cat resources/CLJ_JQ_VERSION
          clojure -X:deploy
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
