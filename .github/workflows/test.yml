name: Tests

on:
  push:
    branches:
      - '**'
      - '!v*'
    tags:
      - '!v*'
    paths-ignore:
      - 'pom.xml'

jobs:
  unit-test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache maven deps
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Prepare java
        uses: actions/setup-java@v2.3.1
        with:
          java-version: 8.0.292+10
          distribution: 'adopt'

      - name: Install clojure tools-deps
        uses: DeLaGuardo/setup-clojure@master
        with:
          tools-deps: 1.10.3.986

      - name: Unit Tests
        run: clojure -A:dev:test

  compile-windows-native-image:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            platform: windows
            arch: 'amd64'
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'

      - name: Set env
        run: |
          echo ("RELEASE_VERSION=" + $env:GITHUB_REF.replace('refs/tags/', '')) >> $env:GITHUB_ENV

      - name: Prepare java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install clojure tools-deps
        uses: DeLaGuardo/setup-clojure@master
        with:
          tools-deps: 1.10.3.986
          cli: 1.10.3.986

      - name: Compile uberjar on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          clojure -T:build uber
        shell: powershell

      - uses: ilammy/msvc-dev-cmd@v1.10.0
      - uses: microsoft/setup-msbuild@v1
      - name: Set env
        shell: powershell
        run: |
          echo ("CLJ_JQ_VERSION=" + $(cat resources/CLJ_JQ_VERSION)) >> $env:GITHUB_ENV

      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.2.0
          native-image: true

      - name: Build native image
        run: |
          native-image -jar "target/clj-jq-$env:CLJ_JQ_VERSION-standalone.jar" -H:Name=clj-jq -H:+ReportExceptionStackTraces --initialize-at-build-time --verbose --no-fallback -J-Xmx8g
        shell: powershell

      - name: Zip executable
        shell: powershell
        run: |
          tar.exe -a -c -f clj-jq-$($env:RELEASE_VERSION.replace('v', ''))-${{ matrix.platform }}-${{ matrix.arch }}.zip clj-jq.exe

      - name: Upload windows binaries to the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            clj-jq-*-${{ matrix.platform }}-${{ matrix.arch }}.zip
